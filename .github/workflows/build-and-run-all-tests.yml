# Build and then run all tests, on all supported archs.
name: Build and run all tests

on:
  workflow_dispatch:
    inputs:
      build-type:
        required: false
        default: Release
        type: choice
        options:
          - Release
          - RelWithDebInfo
          - Debug
          - ASan
          - TSan
  pull_request:
  push:
    branches: ["main"]

jobs:
  build-tests:
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          {arch: wormhole_b0},
          {arch: blackhole},
        ]
        ubuntu-version: [
          'ubuntu-22.04',
          # 'ubuntu-20.04',
        ]
        # By default we run ASan build on PRs since it adds a marginal perf hit but is very useful in
        # catching bugs and it runs Debug asserts.
        # We run both ASan and TSan build on push events to main since it is a more thorough test.
        # When workflow is requested, only the requested build-type is run, with the default being Release.
        build-type: ${{ github.event_name == 'pull_request' && fromJson('["ASan"]') ||
                        github.event_name == 'push' && fromJson('["ASan", "TSan"]') ||
                        github.event_name == 'workflow_dispatch' && github.event.inputs.build-type ||
                        fromJson('["Release"]') }}
    uses: ./.github/workflows/build-tests.yml
    with:
      arch: ${{ matrix.test-group.arch}}
      ubuntu-version: ${{ matrix.ubuntu-version}}
      timeout: 15
      build-type: ${{ matrix.build-type }}

  test-all:
    secrets: inherit
    needs: build-tests
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          {arch: wormhole_b0, card: n150, timeout: 10},
          {arch: wormhole_b0, card: n300, timeout: 15},
          {arch: blackhole, card: p150, timeout: 15},
        ]
        ubuntu-version: [
          # Running tests on ubuntu-22.04 should be sufficient. Reduce load on CI.
          'ubuntu-22.04',
          # 'ubuntu-20.04',
        ]
    uses: ./.github/workflows/run-tests.yml
    with:
      arch: ${{ matrix.test-group.arch}}
      ubuntu-version: ${{ matrix.ubuntu-version}}
      card: ${{ matrix.test-group.card}}
      timeout: ${{ matrix.test-group.timeout}}
